(function ($) {
	'use strict';
	var data = [], totalPoints = 300, updateInterval = 3000, previousPoint = null, totalLoad = 0, index = 0;
	var options = {
	    colors: [$.CloudONEApp.dark],
	    lines: {
	      lineWidth: 1,
	    },
	    series: {
	      shadowSize: 0
	    },
	    grid: {
	      color: $.CloudONEApp.border,
	      borderWidth: 0,
	      hoverable: true
	    },
	    xaxis: {
	      show: false
	    },
	    yaxis: {
	      min: 0
	    }
	};
	var plot = $.plot('.realtime', [data], options);
	function makedata(obj){
		var data = [], x;
		for (x in obj){
			data.push([x, obj[x]]);
		}
		return data;
	}
	function monthly_graphs() {
		var id, total, uplink, downlink;
		id = $('#id').val();
		if(!id) {return false}
		$.getJSON("/instance/ajax-manager?i="+id, function(data){
			if(data.result=='success'){
				total = makedata(data.msg.bandwidth.usage);
				uplink = makedata(data.msg.bandwidth.in);
				downlink = makedata(data.msg.bandwidth.out);
				var plotdata = [{
					data: total,
					color: $.CloudONEApp.primary
					}, {
					data: uplink,
					color: $.CloudONEApp.info
					}, {
					data: downlink,
					color: $.CloudONEApp.success
				}];
				$.plot($('#line-chart'), plotdata, {
					series: {
						lines: {
							show: true,
							lineWidth: 0,
						},
						splines: {
							show: true,
							tension: 0.5,
							lineWidth: 1,
							fill: 0.2,
						},
						shadowSize: 0
					},
					grid: {
						color: $.CloudONEApp.border,
						borderWidth: 1,
						hoverable: true,
					},
				});
			}
		});		
	}
	function realtime_graphs() {
		var id = $('#id').val();
		if(!id) {return false}
		$.getJSON("/instance/ajax-realtime?i="+id, function(res){
			if(res.result=='success'){
				var d = data.length;
				if(d > totalPoints){
					++totalLoad;
					data = data.slice(1);
				}
				index = d + totalLoad;
				data.push([index, res.msg.speed]);
				plot = $.plot('.realtime', [data], options);
			}
		});
		setTimeout(realtime_graphs, updateInterval);
	}
	function showTooltip(x, y, contents) {
		$('<div id=\'tooltip\'>' + contents + '</div>').css({top: y - 10,left: x + 20}).appendTo('body').fadeIn(200);
	}	
	$('.chart, .chart-sm').bind('plothover', function (event, pos, item) {
		if (item) {
			if (previousPoint !== item.dataIndex) {
				previousPoint = item.dataIndex;
				$('#tooltip').remove();
				var x = item.datapoint[0],
				y = item.datapoint[1];
				showTooltip(item.pageX, item.pageY, y + ' at ' + x);
			}
		} else {
			$('#tooltip').remove();
			previousPoint = null;
		}
	});
	function load_init() {
		var n = $('#id').val();
		var s = $('#hav').val();
		if(s==='no'){
			swal({title: "Chưa có máy chủ", text: "Bấm nút phía dưới để tạo máy chủ đầu tiên của bạn", type: "warning", showCancelButton: false, confirmButtonColor: "#4cc3d9",   confirmButtonText: "Tạo máy chủ",   closeOnConfirm: false}, function(){window.location.replace('/instance/launch-new-instance')});
			return false
		}
		if(typeof n === "undefined" || !n){
			$('#main-graphs').hide();
			$('#select-id').show();
			return false
		}
		return n;
	}
	var id = load_init();
	if(id){
		$('#id').val(id);
		monthly_graphs();
		realtime_graphs();
	} else {
		$('#new_id').change(function(){
			id = $('#new_id').val();
			if(!id){
				return false
			}
			$('#id').val(id);
			$('#main-graphs').show();
			$('#select-id').hide();
			monthly_graphs();
			realtime_graphs();
		})
	}
})(jQuery);